services:
  group-words-process:
    container_name: group-words-process
    build:
      context: .
      network: host
    volumes:
      - ./src:/src
    depends_on:
      folders-api:
        condition: service_started
    restart: on-failure
    environment:
      DJANGO_ALLOWED_HOSTS: "*"
      DJANGO_DATABASE_HOST: "folders-postgres"
      DJANGO_DATABASE_NAME: "folders_local"
      DJANGO_DATABASE_USER: "postgres"
      DJANGO_DATABASE_PASSWORD: "password"
      DJANGO_DATABASE_PORT: "5432"
      DJANGO_DATABASE_ENGINE: "django.db.backends.postgresql"
    command: > 
      bash -c "
      until python src/manage.py migrate --check | grep 'No migrations to apply.' > /dev/null ; do 
      echo 'Waiting for all migrations to be applied...'
      sleep 2; 
      done && echo 'All migrations applied. Starting process...' && python src/manage.py process_words
      "

  folders-api:
    container_name: folders-api
    build:
      context: .
      network: host
    volumes:
      - ./src:/src
    depends_on:
      folders-postgres:
          condition: service_healthy
    restart: on-failure
    ports:
      - "8000:8000"
    environment:
      DJANGO_ALLOWED_HOSTS: "*"
      DJANGO_DATABASE_HOST: "folders-postgres"
      DJANGO_DATABASE_NAME: "folders_local"
      DJANGO_DATABASE_USER: "postgres"
      DJANGO_DATABASE_PASSWORD: "password"
      DJANGO_DATABASE_PORT: "5432"
      DJANGO_DATABASE_ENGINE: "django.db.backends.postgresql"
    command: bash -c "python src/manage.py migrate && python src/manage.py runserver 0.0.0.0:8000"

  folders-postgres:
    container_name: folders-postgres
    image: postgres:12
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    ports:
      - "65432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "folders_local"
    volumes:
      - db_data:/var/lib/postgresql/data

volumes:
  db_data:
    driver: local
